from telethon import TelegramClient, events
from dotenv import load_dotenv
import os
from openai import OpenAI
import json

load_dotenv()

API_ID = int(os.getenv("TELEGRAM_API_ID"))
API_HASH = os.getenv("TELEGRAM_API_HASH")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
TARGET_CHAT = os.getenv("TARGET_CHAT")
MY_TELEGRAM_ID = int(os.getenv("MY_TELEGRAM_ID"))

openai_client = OpenAI(api_key=OPENAI_API_KEY)
client = TelegramClient('guardian_session', API_ID, API_HASH)


async def process_message(event):
    text = event.text or ""
    print(f"[MSG] {text}")

    if len(text.strip()) < 10 or len(text.strip()) > 300:
        return  # —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ –∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

    prompt = (
        f"–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∞–¥—Ä–µ—Å–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram –æ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è—Ö –≤ –û–¥–µ—Å—Å–µ.\n\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {text}\n\n"
        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞:\n"
        f"- –ù—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ —Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞—Å–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —ç—Ç–∏—Ö —Ä–∞–π–æ–Ω–æ–≤ –û–¥–µ—Å—Å—ã:\n"
        f"  ‚Ä¢ –ö–∏–µ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω (–¢–∞–∏—Ä–æ–≤–∞)\n"
        f"  ‚Ä¢ –•–∞–¥–∂–∏–±–µ–π—Å–∫–∏–π —Ä–∞–π–æ–Ω (–í–∞—Ä–Ω–µ–Ω—Å–∫–∞—è, –ì–∞–π–¥–∞—Ä–∞, –§–∏–ª–∞—Ç–æ–≤–∞ –∏ –ø—Ä.)\n"
        f"  ‚Ä¢ –ë–æ–ª—å—à–æ–π –§–æ–Ω—Ç–∞–Ω\n"
        f"  ‚Ä¢ –ß–µ—Ä–Ω–æ–º–æ—Ä–∫–∞\n"
        f"  ‚Ä¢ –õ–∏–º–∞–Ω–∫–∞\n\n"
        f"–°–ø–∏—Å–æ–∫ —É–ª–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å (–Ω–µ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ä—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π):\n"
        f"–ò–ª—å—Ñ–∞ –∏ –ü–µ—Ç—Ä–æ–≤–∞, –í–∏–ª—å—è–º—Å–∞, –ö–æ—Ä–æ–ª–µ–≤–∞, –ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä—Å–∫–∞—è, –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞, –õ—é—Å—Ç–¥–æ—Ä—Ñ—Å–∫–∞—è –¥–æ—Ä–æ–≥–∞, –õ–µ–≤–∏—Ç–∞–Ω–∞, –ö–æ—Å—Ç–∞–Ω–¥–∏, –ì–ª—É—à–∫–æ, –¢–æ–ø–æ–ª–µ–≤–∞—è, –í—É–∑–æ–≤—Å–∫–∏–π, –®–∏—à–∫–∏–Ω–∞, –õ—å–≤–æ–≤—Å–∫–∞—è, –ì–∞–π–¥–∞—Ä–∞, –§–∏–ª–∞—Ç–æ–≤–∞, –í–∞—Ä–Ω–µ–Ω—Å–∫–∞—è, –Ø–∫–∏—Ä–∞, –ö–æ—Å–º–æ–Ω–∞–≤—Ç–æ–≤, –ö–æ–º–∞—Ä–æ–≤–∞, 25 —á–∞–ø–∞–µ–≤—Å–∫–æ–π –∏ –¥—Ä. \n\n"
        f"- –£—á–∏—Ç—ã–≤–∞–π, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n"
        f"  ‚Ä¢ —Å—Ç–∞—Ä—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —É–ª–∏—Ü,\n"
        f"  ‚Ä¢ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏–ª–∏ —Ñ–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏,\n"
        f"  ‚Ä¢ —Å–ª–µ–Ω–≥–æ–≤—ã–µ –∏–ª–∏ —Å–æ–∫—Ä–∞—â—ë–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã.\n\n"
        f"- –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞. –¢—â–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π –Ω–∞–∑–≤–∞–Ω–∏—è —É–ª–∏—Ü.\n"
        f"- –ï—Å–ª–∏ –º–µ—Å—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–π–æ–Ω–∞–º ‚Äî `match: true`, –∏–Ω–∞—á–µ ‚Äî `match: false`.\n"
        f"- –£–∫–∞–∂–∏ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å (—Å –Ω–æ–≤—ã–º –∏ —Å—Ç–∞—Ä—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω–æ), –Ω–æ–º–µ—Ä –¥–æ–º–∞ (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω) –∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä (–µ—Å–ª–∏ —É–ø–æ–º—è–Ω—É—Ç).\n"
        f"- –¢–∞–∫–∂–µ –≤—ã–¥–µ–ª–∏ –∫—Ä–∞—Ç–∫—É—é —Å—É—Ç—å –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ (–≤ 2‚Äì5 —Å–ª–æ–≤–∞—Ö).\n"
        f"- –û—Ç–≤–µ—Ç —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON. –ù–∏–∫–∞–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤–Ω–µ JSON.\n\n"
        f"–ü—Ä–∏–º–µ—Ä:\n"
        f'''{{
  "match": true,
  "address": "—É–ª. –ê–∫–∞–¥–µ–º–∏–∫–∞ –ì–ª—É—à–∫–æ (–Ω–æ–≤–æ–µ: —É–ª. –Ø—Ä–æ—Å–ª–∞–≤–∞ –ú—É–¥—Ä–æ–≥–æ), –¥–æ–º 22, –æ—Ä–∏–µ–Ω—Ç–∏—Ä: –¢–¶ –ü–∞–ª—å–º–∏—Ä–∞ –ü–ª–∞–∑–∞",
  "summary": "–ø–∞–∫—É—é—Ç –º—É–∂–∏–∫–∞"
}}'''
    )

    try:
        response = openai_client.chat.completions.create(
            model="gpt-4o",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.2,
        )
        raw = response.choices[0].message.content
        print(f"[RAW GPT] {raw}")

        if raw.startswith("```"):
            raw = raw.strip("`").strip("json").strip()

        data = json.loads(raw)

        if data.get("match") and data.get("address"):
            await client.send_message(MY_TELEGRAM_ID, f"{data['address']}\n {data['summary']}")
            print("üü¢ –°—Ä–∞–±–æ—Ç–∞–ª")
    except Exception as e:
        print(f"[ERROR] {e}")


@client.on(events.NewMessage(chats=TARGET_CHAT))
async def handler(event):
    await process_message(event)


async def main():
    print("üîÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π...")
    async for msg in client.iter_messages(TARGET_CHAT, limit=5, reverse=False):
        await process_message(msg)
        print("üü¢ –°—Ä–∞–±–æ—Ç–∞–ª")

    print("üü¢ –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª—É—à–∞—é...")
    await client.run_until_disconnected()


client.start()
print("üü¢ Saver started and listening...")
client.loop.run_until_complete(main())
